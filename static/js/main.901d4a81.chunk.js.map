{"version":3,"sources":["components/Profile/Profile.module.css","components/Statistics/Statistics.module.css","components/FriendsList/FriendListItem.module.css","components/FriendsList/FriendList.module.css","components/TransactionHistory/TransactionHistory.module.css","components/default.jpg","components/Profile/Profile.js","components/Statistics/Statistics.js","components/FriendsList/FriendListItem.js","components/FriendsList/FriendList.js","components/TransactionHistory/TransactionHistory.js","App.js","reportWebVitals.js","index.js"],"names":["module","exports","User","name","tag","location","avatar","defaultImg","followers","views","likes","className","s","profile","description","src","alt","stats","listItem","label","quantity","Statistics","title","statistics","statList","map","stat","randomColor","randomNum","item","style","backgroundColor","percentage","id","max","Math","floor","random","FriendListItem","isOnline","friendWrapper","online","width","Friends","friends","friendsList","friend","TransactionHistory","items","table","header","el","type","amount","currency","App","user","statisticalData","transactions","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.901d4a81.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"profile\":\"Profile_profile__3VlCH\",\"avatar\":\"Profile_avatar__1b0CO\",\"name\":\"Profile_name__2DqV4\",\"tag\":\"Profile_tag__2Zirj\",\"location\":\"Profile_location__-k0zz\",\"stats\":\"Profile_stats__1szh2\",\"label\":\"Profile_label__1Hgb0\",\"quantity\":\"Profile_quantity__3LglU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"statistics\":\"Statistics_statistics__FI7UR\",\"title\":\"Statistics_title__NdqAO\",\"statList\":\"Statistics_statList__19AfO\",\"item\":\"Statistics_item__1uosL\",\"percentage\":\"Statistics_percentage__2So5-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"friendWrapper\":\"FriendListItem_friendWrapper__2lBB9\",\"online\":\"FriendListItem_online__1VGHg\",\"avatar\":\"FriendListItem_avatar__1Udh7\",\"name\":\"FriendListItem_name__yTCPI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"friendsList\":\"FriendList_friendsList__36XGa\",\"listItem\":\"FriendList_listItem__3WJ8q\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"table\":\"TransactionHistory_table__M9vXy\",\"header\":\"TransactionHistory_header__3bZhK\"};","export default __webpack_public_path__ + \"static/media/default.2e01288c.jpg\";","import PropTypes from 'prop-types';\nimport defaultImg from '../default.jpg';\nimport s from './Profile.module.css';\n\nexport default function User({\n  name,\n  tag,\n  location,\n  avatar = defaultImg,\n  followers,\n  views,\n  likes,\n}) {\n  return (\n    <div className={s.profile}>\n      <div className={s.description}>\n        <img src={avatar} alt=\"Аватар пользователя\" className={s.avatar} />\n        <p className={s.name}>{name}</p>\n        <p className={s.tag}>@{tag}</p>\n        <p className={s.location}>{location}</p>\n      </div>\n\n      <ul className={s.stats}>\n        <li className={s.listItem}>\n          <span className={s.label}>Followers</span>\n          <span className={s.quantity}>{followers}</span>\n        </li>\n        <li className={s.listItem}>\n          <span className={s.label}>Views</span>\n          <span className={s.quantity}>{views}</span>\n        </li>\n        <li className={s.listItem}>\n          <span className={s.label}>Likes</span>\n          <span className={s.quantity}>{likes}</span>\n        </li>\n      </ul>\n    </div>\n  );\n}\n\nUser.propTypes = {\n  name: PropTypes.string.isRequired,\n  tag: PropTypes.string.isRequired,\n  location: PropTypes.string.isRequired,\n  avatar: PropTypes.string.isRequired,\n  followers: PropTypes.number.isRequired,\n  views: PropTypes.number.isRequired,\n  likes: PropTypes.number.isRequired,\n};\n","import PropTypes from 'prop-types';\nimport s from './Statistics.module.css';\n\nexport default function Statistics({ title, stats }) {\n  return (\n    <section className={s.statistics}>\n      {title && <h2 className={s.title}>{title}</h2>}\n\n      <ul className={s.statList}>\n        {stats.map(stat => {\n          const randomColor = `rgb(${randomNum(266)}, ${randomNum(\n            266,\n          )}, ${randomNum(266)})`;\n          return (\n            <li\n              className={s.item}\n              key={stat.id}\n              style={{ backgroundColor: randomColor }}\n            >\n              <span className={s.label}>{stat.label}</span>\n              <span className={s.percentage}>{stat.percentage}%</span>\n            </li>\n          );\n        })}\n      </ul>\n    </section>\n  );\n}\n\nfunction randomNum(max) {\n  return Math.floor(Math.random() * max);\n}\n\nStatistics.propTypes = {\n  title: PropTypes.string,\n  stats: PropTypes.array.isRequired,\n};\n","import PropTypes from 'prop-types';\nimport s from './FriendListItem.module.css';\nimport defaultImg from '../default.jpg';\n\nexport default function FriendListItem({\n  avatar = defaultImg,\n  name,\n  isOnline,\n}) {\n  return (\n    <div className={s.friendWrapper}>\n      <span\n        className={s.online}\n        style={{ backgroundColor: isOnline ? 'green' : 'red' }}\n      ></span>\n      <img className={s.avatar} src={avatar} alt={name} width=\"48\" />\n      <p className={s.name}>{name}</p>\n    </div>\n  );\n}\n\nFriendListItem.propTypes = {\n  avatar: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  isOnline: PropTypes.bool.isRequired,\n};\n","import PropTypes from 'prop-types';\nimport FriendListItem from './FriendListItem';\nimport s from './FriendList.module.css';\n\nexport default function Friends({ friends }) {\n  return (\n    <div>\n      <ul className={s.friendsList}>\n        {friends.map(friend => (\n          <li className={s.listItem} key={friend.id}>\n            <FriendListItem\n              avatar={friend.avatar}\n              name={friend.name}\n              isOnline={friend.isOnline}\n            />\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n}\n\nFriends.propTypes = {\n  friends: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n    }),\n  ),\n};\n","import PropTypes from 'prop-types';\nimport s from './TransactionHistory.module.css';\n\nexport default function TransactionHistory({ items }) {\n  return (\n    <div>\n      <table className={s.table}>\n        <thead className={s.header}>\n          <tr>\n            <th>Type</th>\n            <th>Amount</th>\n            <th>Currency</th>\n          </tr>\n        </thead>\n        {items.map(el => (\n          <tbody key={el.id}>\n            <tr>\n              <td>{el.type}</td>\n              <td>{el.amount}</td>\n              <td>{el.currency}</td>\n            </tr>\n          </tbody>\n        ))}\n      </table>\n    </div>\n  );\n}\n\nTransactionHistory.propTypes = {\n  items: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      type: PropTypes.string.isRequired,\n      amount: PropTypes.string.isRequired,\n      currency: PropTypes.string.isRequired,\n    }),\n  ),\n};\n","import './App.css';\n\nimport user from './data/user.json';\nimport Profile from './components/Profile/Profile';\n\nimport statisticalData from './data/statistical-data.json';\nimport Statistics from './components/Statistics/Statistics';\n\nimport FriendList from './components/FriendsList/FriendList';\nimport friends from './data/friends.json';\n\nimport transactions from './data/transactions.json';\nimport TransactionHistory from './components/TransactionHistory/TransactionHistory';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n\n      <h2 className=\"App-title\">\n        Task 1\n      </h2>\n\n      <Profile\n        name={user.name}\n        tag={user.tag}\n        avatar={user.avatar}\n        location={user.location}\n        followers={user.stats.followers}\n        views={user.stats.views}\n        likes={user.stats.likes}\n      />\n\n      <h2 className=\"App-title\">\n        Task 2\n      </h2>\n\n      <Statistics title=\"Upload stats\" stats={statisticalData} />\n\n      <h2 className=\"App-title\">\n        Task 3\n      </h2>\n\n      <FriendList friends={friends} />\n\n      <h2 className=\"App-title\">\n        Task 4\n      </h2>\n\n      <TransactionHistory items={transactions} />\n\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'modern-normalize/modern-normalize.css';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\nreportWebVitals();\n"],"sourceRoot":""}